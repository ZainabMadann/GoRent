@model List<ClassLibrary.Model.Category>
@using Microsoft.AspNetCore.Mvc.Rendering

@{
    ViewData["Title"] = "Manage Categories";
}

<div class="container py-4">
    <div class="row justify-content-center">
        <div class="col-12 col-lg-10">
            <div class="card bg-dark text-white shadow mb-4">
                <div class="card-body p-4">
                    <h3 class="h5 mb-3">All Categories</h3>

                    <div class="row g-2 align-items-start mb-3">
                        <div class="col-md-6">
                            <input type="text" name="searchTerm" id="searchTerm"
                                   class="form-control bg-dark text-white border-secondary"
                                   placeholder="Search category..." />
                        </div>

                        <div class="col-md-3">
                            <select name="filterCategory" id="filterCategory"
                                    class="form-select bg-dark text-white border-secondary">
                                <option value="">All Categories</option>
                                @foreach (var cat in ViewBag.CategorySelectList as SelectList)
                                {
                                    <option value="@cat.Value">@cat.Text</option>
                                }
                            </select>
                        </div>

                        <div class="col-md-1">
                            <button type="button" class="btn button-primary w-100"
                                    id="resetBtn"
                                    style="background-color: #1f2a55; color: white;">
                                <i class="bi bi-arrow-counterclockwise"></i> Reset
                            </button>
                        </div>

                        <div class="col-md-2">
                            <button type="button" class="btn button-primary w-100"
                                    style="background-color: #1f2a55; color: white;"
                                    data-bs-toggle="modal" data-bs-target="#addCategoryModal">
                                <i class="bi bi-plus-lg me-1"></i> Add New
                            </button>
                        </div>
                    </div>

                    <!-- Spinner -->
                    <div id="loadingSpinner" class="text-center d-none my-3">
                        <div class="spinner-border text-light" role="status">
                            <span class="visually-hidden">Loading...</span>
                        </div>
                    </div>

                    <!-- Categories List -->
                    <div id="categoriesList" style="max-height: 380px; overflow-y: auto;">
                        @await Html.PartialAsync("_FilteredCategoriesOnly", Model)
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Add Category Modal -->
<div class="modal fade" id="addCategoryModal" tabindex="-1" aria-labelledby="addCategoryModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content bg-dark text-white">
            <div class="modal-header">
                <h5 class="modal-title" id="addCategoryModalLabel">Add New Category</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="addCategoryForm" method="post" action="/Category/Add">
                    <div class="mb-3">
                        <label for="categoryName" class="form-label">Category Name</label>
                        <input type="text" name="categoryName" class="form-control bg-dark text-white border-secondary" id="categoryName" required>
                    </div>
                    <div class="mb-3">
                        <label for="categoryDescription" class="form-label">Description</label>
                        <textarea name="categoryDescription" class="form-control bg-dark text-white border-secondary" id="categoryDescription" rows="3" required></textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="submit" form="addCategoryForm" class="btn button-primary"
                        style="background-color: #1f2a55; color: white;">Add Category</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
<script>
    let debounceTimer;

    function fetchCategories() {
        const searchTerm = document.getElementById("searchTerm").value;
        const filterCategory = document.getElementById("filterCategory").value;
        const spinner = document.getElementById("loadingSpinner");

        spinner.classList.remove("d-none");

        fetch(`/Category/FilterManage?searchTerm=${encodeURIComponent(searchTerm)}&filterCategory=${filterCategory}`, {
            headers: { "X-Requested-With": "XMLHttpRequest" }
        })
            .then(response => response.text())
            .then(html => {
                document.getElementById('categoriesList').innerHTML = html;
                spinner.classList.add("d-none");
            });
    }

    document.getElementById('searchTerm').addEventListener('input', function () {
        clearTimeout(debounceTimer);
        debounceTimer = setTimeout(fetchCategories, 200);
    });

    document.getElementById('filterCategory').addEventListener('change', fetchCategories);

    document.getElementById('resetBtn').addEventListener('click', function () {
        document.getElementById('searchTerm').value = '';
        document.getElementById('filterCategory').selectedIndex = 0;
        fetchCategories();
    });
</script>
}

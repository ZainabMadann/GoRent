@model WebApp.Models.PaymentViewModel

@{
    ViewData["Title"] = "Payment";
}

<div class="container py-4">
    <div class="row justify-content-center">
        <div class="col-12 col-lg-8">
            <div class="card bg-dark text-white shadow">
                <div class="card-body p-4">
                    <h3 class="h5 mb-3">Make a Payment</h3>

                    <form asp-action="ProcessPayment" asp-controller="RentalTransaction" method="post">
                        @Html.AntiForgeryToken()

                        <input type="hidden" asp-for="RentalRequestId" />
                        <input type="hidden" asp-for="Amount" />

                        <div class="mb-3">
                            <label asp-for="CardNumber" class="form-label"></label>
                            <input asp-for="CardNumber" class="form-control bg-dark text-white border-secondary" placeholder="1234 5678 9012 3456" />
                            <span asp-validation-for="CardNumber" class="text-danger"></span>
                        </div>

                        <div class="mb-3 row">
                            <div class="col-md-6">
                                <label asp-for="ExpiryDate" class="form-label"></label>
                                <input asp-for="ExpiryDate" class="form-control bg-dark text-white border-secondary" placeholder="MM/YY" />
                                <span asp-validation-for="ExpiryDate" class="text-danger"></span>
                            </div>
                            <div class="col-md-6">
                                <label asp-for="CVV" class="form-label"></label>
                                <input asp-for="CVV" class="form-control bg-dark text-white border-secondary" placeholder="123" />
                                <span asp-validation-for="CVV" class="text-danger"></span>
                            </div>
                        </div>

                        <div class="mb-3">
                            <label class="form-label">Amount</label>
                            <input value="@Model.Amount.ToString("0.00")" class="form-control bg-dark text-white border-secondary" disabled />
                        </div>

                        <div class="d-flex gap-2">
                            <button type="submit" class="btn btn-success w-100">Pay Now</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Card Number formatting and validation
            const cardInput = document.getElementById('CardNumber');
            cardInput.addEventListener('input', function(e) {
                // Remove any non-digits
                let value = e.target.value.replace(/\D/g, '');
                
                // Limit to 16 digits
                value = value.substring(0, 16);
                
                // Add spaces after every 4 digits
                value = value.replace(/(\d{4})(?=\d)/g, '$1 ');
                
                e.target.value = value;
            });

            // Expiry Date formatting and validation
            const expiryInput = document.getElementById('ExpiryDate');
            expiryInput.addEventListener('input', function(e) {
                // Remove any non-digits
                let value = e.target.value.replace(/\D/g, '');
                
                // Limit to 4 digits
                value = value.substring(0, 4);
                
                // Add slash after month
                if (value.length > 2) {
                    value = value.substring(0, 2) + '/' + value.substring(2);
                }
                
                e.target.value = value;

                // Validate month
                if (value.length >= 2) {
                    let month = parseInt(value.substring(0, 2));
                    if (month < 1) value = '01' + value.substring(2);
                    if (month > 12) value = '12' + value.substring(2);
                    e.target.value = value;
                }
            });

            // Future date validation
            expiryInput.addEventListener('blur', function(e) {
                if (e.target.value.length === 5) {
                    const [month, year] = e.target.value.split('/');
                    const expiry = new Date(2000 + parseInt(year), parseInt(month) - 1);
                    const today = new Date();
                    
                    if (expiry < today) {
                        alert('Expiry date must be in the future');
                        e.target.value = '';
                    }
                }
            });

            // CVV validation
            const cvvInput = document.getElementById('CVV');
            cvvInput.addEventListener('input', function(e) {
                // Remove any non-digits
                let value = e.target.value.replace(/\D/g, '');
                
                // Limit to 4 digits (some cards use 4-digit CVV)
                value = value.substring(0, 4);
                
                e.target.value = value;
            });

            // Form validation before submit
            document.querySelector('form').addEventListener('submit', function(e) {
                const cardNumber = cardInput.value.replace(/\s/g, '');
                const expiry = expiryInput.value;
                const cvv = cvvInput.value;

                if (cardNumber.length !== 16) {
                    e.preventDefault();
                    alert('Please enter a valid 16-digit card number');
                    return;
                }

                if (expiry.length !== 5) {
                    e.preventDefault();
                    alert('Please enter a valid expiry date (MM/YY)');
                    return;
                }

                if (cvv.length < 3) {
                    e.preventDefault();
                    alert('Please enter a valid CVV');
                    return;
                }
            });
        });
    </script>
}

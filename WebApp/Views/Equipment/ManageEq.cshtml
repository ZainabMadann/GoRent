@model WebApp.Models.ManageEquipmentViewModel
@{
    ViewData["Title"] = "Manage Equipment";
}

<div class="container py-4">
    <div class="row justify-content-center">
        <div class="col-12 col-lg-10">
            <div class="card bg-dark text-white shadow mb-4">
                <div class="card-body p-4">
                    <h3 class="h5 mb-3">All Equipment</h3>
<div class="mb-4">
    <div class="row g-2 align-items-center">

       <div class="row g-2 align-items-start mb-3">
    <div class="col-md-6">
        <input type="text" id="searchEquipment"
               class="form-control bg-dark text-white border-secondary"
               placeholder="Search equipment..." />
    </div>

    <div class="col-md-3">
        <select id="filterCategory" class="form-select bg-dark text-white border-secondary">
            <option value="">All Categories</option>
            @foreach (var category in Model.Categories)
            {
                <option value="@category.CategoryId">@category.Name</option>
            }
        </select>
    </div>

    <div class="col-md-1">
        <button type="button" class="btn button-primary w-100"
                id="resetBtn"
                style="background-color: #1f2a55; color: white;">
            <i class="bi bi-arrow-counterclockwise"></i> Reset
        </button>
    </div>

    <div class="col-md-2">
        <button type="button" class="btn button-primary w-100"
                style="background-color: #1f2a55; color: white;"
                data-bs-toggle="modal" data-bs-target="#addEquipmentModal">
            <i class="bi bi-plus-lg me-1"></i> Add New
        </button>
    </div>
</div>

</div>



                    <!-- Spinner -->
                    <div id="loadingSpinner" style="display:none;" class="text-center my-2">
                        <div class="spinner-border text-light" role="status">
                            <span class="visually-hidden">Loading...</span>
                        </div>
                    </div>

                    <div id="equipmentList" style="max-height: 380px; overflow-y: auto;">
                        @await Html.PartialAsync("_FilteredEquipmentManagePartial", Model.EquipmentList)
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Add Equipment Modal -->
<div class="modal fade" id="addEquipmentModal" tabindex="-1" aria-labelledby="addEquipmentModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content bg-dark text-white">
            <div class="modal-header">
                <h5 class="modal-title" id="addEquipmentModalLabel">Add New Equipment</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form asp-action="Create" asp-controller="Equipment" method="post" enctype="multipart/form-data" id="addEquipmentForm">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label asp-for="CreateEquipment.Name" class="form-label">Equipment Name</label>
                                <input asp-for="CreateEquipment.Name" class="form-control bg-dark text-white border-secondary" />
                                <span asp-validation-for="CreateEquipment.Name" class="text-danger"></span>
                            </div>

                            <div class="mb-3">
                                <label asp-for="CreateEquipment.Category_ID" class="form-label">Category</label>
                                <select asp-for="CreateEquipment.Category_ID" class="form-select bg-dark text-white border-secondary">
                                    <option value="">Select Category</option>
                                    @foreach (var category in Model.Categories)
                                    {
                                        <option value="@category.CategoryId">@category.Name</option>
                                    }
                                </select>
                                <span asp-validation-for="CreateEquipment.Category_ID" class="text-danger"></span>
                            </div>

                            <div class="mb-3">
                                <label asp-for="CreateEquipment.RentalRate" class="form-label">Price ($)</label>
                                <input asp-for="CreateEquipment.RentalRate" type="number" class="form-control bg-dark text-white border-secondary" step="0.01" min="0" />
                                <span asp-validation-for="CreateEquipment.RentalRate" class="text-danger"></span>
                            </div>
                        </div>

                        <div class="col-md-6">
                            <div class="mb-3">
                                <label asp-for="CreateEquipment.Description" class="form-label">Description</label>
                                <textarea asp-for="CreateEquipment.Description" class="form-control bg-dark text-white border-secondary" rows="3"></textarea>
                                <span asp-validation-for="CreateEquipment.Description" class="text-danger"></span>
                            </div>

                            <div class="mb-3">
                                <label asp-for="CreateEquipment.Equipment_Status_ID" class="form-label">Status</label>
                                <select asp-for="CreateEquipment.Equipment_Status_ID" class="form-select bg-dark text-white border-secondary">
                                    <option value="">Select Status</option>
                                    @foreach (var status in Model.Statuses)
                                    {
                                        <option value="@status.EquipmentStatusId">@status.Description</option>
                                    }
                                </select>
                                <span asp-validation-for="CreateEquipment.Equipment_Status_ID" class="text-danger"></span>
                            </div>

                            <div class="mb-3">
                                <label asp-for="CreateEquipment.EquipmentImage" class="form-label">Equipment Image</label>
                                <input asp-for="CreateEquipment.EquipmentImage" type="file" class="form-control bg-dark text-white border-secondary" />
                                <span asp-validation-for="CreateEquipment.EquipmentImage" class="text-danger"></span>
                            </div>
                        </div>
                    </div>

                    <div class="modal-footer">
                        <button type="submit" class="btn btn-primary">Add Equipment</button>
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
<script>
    const searchInput = document.getElementById('searchEquipment');
    const categorySelect = document.getElementById('filterCategory');
    const resetBtn = document.getElementById('resetBtn');
    const equipmentList = document.getElementById('equipmentList');
    const spinner = document.getElementById('loadingSpinner');

    function filterEquipment() {
        const searchTerm = searchInput.value;
        const filterCategory = categorySelect.value;

        spinner.style.display = 'block';
        fetch(`/Equipment/FilterManage?searchTerm=${encodeURIComponent(searchTerm)}&filterCategory=${filterCategory}`)
            .then(response => response.text())
            .then(html => {
                equipmentList.innerHTML = html;
                spinner.style.display = 'none';
            });
    }

    searchInput.addEventListener('input', filterEquipment);
    categorySelect.addEventListener('change', filterEquipment);

    resetBtn.addEventListener('click', () => {
        searchInput.value = '';
        categorySelect.selectedIndex = 0;
        filterEquipment();
    });
</script>
}

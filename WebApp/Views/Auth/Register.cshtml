@{
    ViewData["Title"] = "Register Page";
}
<div class="d-flex justify-content-center align-items-center h-100">
    <div class="dcustom-bg p-4 rounded" style="max-width: 400px;">
        @* <form method="post" asp-action="Register"> *@
        <form method="post" asp-controller="Auth" asp-action="Register">

            <div class="mb-3">
                <label for="name" class="form-label fw-bold text-light">Full Name</label>
                <input type="text" id="name" name="FullName"
                    class="form-control bg-secondary bg-opacity-25 border-secondary text-white"
                    placeholder="Enter your full name" required>
            </div>
            <div class="mb-3">
                <label for="email" class="form-label fw-bold text-light">Email Address</label>
                <input type="email" id="email" name="Email"
                    class="form-control bg-secondary bg-opacity-25 border-secondary text-white"
                    placeholder="Enter your email" required>
            </div>
            <div class="mb-3">
                <label for="password" class="form-label fw-bold text-light">Password</label>
                <div class="position-relative">
                    <input type="password" id="password" name="Password"
                        class="form-control bg-secondary bg-opacity-25 border-secondary text-white"
                        placeholder="Create a password" required>
                    <button type="button" id="togglePassword" class="btn btn-link position-absolute end-0 top-50 translate-middle-y text-white">
                        <i class="bi bi-eye-slash"></i>
                    </button>
                </div>
                <div class="invalid-feedback" id="passwordError"></div>
                <div class="mt-2">
                    <div class="progress" style="height: 5px;">
                        <div id="passwordStrength" class="progress-bar" role="progressbar" style="width: 0%"></div>
                    </div>
                    <small class="text-muted d-block mt-1">Password must contain:</small>
                    <ul class="list-unstyled small text-muted">
                        <li id="lengthCheck"><i class="bi bi-x-circle"></i> At least 8 characters</li>
                        <li id="upperCheck"><i class="bi bi-x-circle"></i> One uppercase letter</li>
                        <li id="lowerCheck"><i class="bi bi-x-circle"></i> One lowercase letter</li>
                        <li id="numberCheck"><i class="bi bi-x-circle"></i> One number</li>
                        <li id="specialCheck"><i class="bi bi-x-circle"></i> One special character</li>
                    </ul>
                </div>
            </div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const passwordInput = document.getElementById('password');
            const togglePassword = document.getElementById('togglePassword');
            const form = document.querySelector('form');
            let passwordValid = false;

            const criteria = {
                length: str => str.length >= 8,
                uppercase: str => /[A-Z]/.test(str),
                lowercase: str => /[a-z]/.test(str),
                number: str => /[0-9]/.test(str),
                special: str => new RegExp('[!@#$%^&*(),.?:{}|<>]').test(str)
            };

            togglePassword.addEventListener('click', function() {
                const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';
                passwordInput.setAttribute('type', type);
                this.querySelector('i').classList.toggle('bi-eye');
                this.querySelector('i').classList.toggle('bi-eye-slash');
            });

            passwordInput.addEventListener('input', function() {
                const password = this.value;
                let strength = 0;
                
                document.getElementById('lengthCheck').innerHTML = 
                    criteria.length(password) 
                        ? '<i class="bi bi-check-circle text-success"></i> At least 8 characters'
                        : '<i class="bi bi-x-circle text-danger"></i> At least 8 characters';
                
                document.getElementById('upperCheck').innerHTML = 
                    criteria.uppercase(password)
                        ? '<i class="bi bi-check-circle text-success"></i> One uppercase letter'
                        : '<i class="bi bi-x-circle text-danger"></i> One uppercase letter';
                
                document.getElementById('lowerCheck').innerHTML = 
                    criteria.lowercase(password)
                        ? '<i class="bi bi-check-circle text-success"></i> One lowercase letter'
                        : '<i class="bi bi-x-circle text-danger"></i> One lowercase letter';
                
                document.getElementById('numberCheck').innerHTML = 
                    criteria.number(password)
                        ? '<i class="bi bi-check-circle text-success"></i> One number'
                        : '<i class="bi bi-x-circle text-danger"></i> One number';
                
                document.getElementById('specialCheck').innerHTML = 
                    criteria.special(password)
                        ? '<i class="bi bi-check-circle text-success"></i> One special character'
                        : '<i class="bi bi-x-circle text-danger"></i> One special character';

                Object.values(criteria).forEach(criterion => {
                    if (criterion(password)) strength += 20;
                });

                const strengthBar = document.getElementById('passwordStrength');
                strengthBar.style.width = strength + '%';
                
                if (strength < 40) {
                    strengthBar.className = 'progress-bar bg-danger';
                } else if (strength < 80) {
                    strengthBar.className = 'progress-bar bg-warning';
                } else {
                    strengthBar.className = 'progress-bar bg-success';
                }

                passwordValid = strength === 100;
                if (passwordValid) {
                    passwordInput.classList.remove('is-invalid');
                    passwordInput.classList.add('is-valid');
                    document.getElementById('passwordError').textContent = '';
                } else {
                    passwordInput.classList.remove('is-valid');
                    if (password.length > 0) {
                        passwordInput.classList.add('is-invalid');
                        document.getElementById('passwordError').textContent = 'Please meet all password requirements';
                    } else {
                        passwordInput.classList.remove('is-invalid');
                        document.getElementById('passwordError').textContent = '';
                    }
                }
            });

            form.addEventListener('submit', function(e) {
                if (!passwordValid) {
                    e.preventDefault();
                    passwordInput.classList.add('is-invalid');
                    document.getElementById('passwordError').textContent = 'Please meet all password requirements';
                }
            });
        });
    </script>
}
            <div class="text-center mt-4">
                <button type="submit" class="custom-btn">Register</button>
            </div>
            <div class="text-center mt-3 text-white">
                Already have an account? <a asp-action="Login" class="custom-link">Login here</a>
            </div>
        </form>
    </div>
</div>

@using Microsoft.AspNetCore.Http
@using System.Linq
@using Microsoft.AspNetCore.Mvc
@using Microsoft.AspNetCore.Mvc.Rendering
@model ClassLibrary.Model.User

@{
    ViewData["Title"] = "Profile Page";
    var userRole = Context.Session.GetString("Role");
    @if (TempData["Message"] != null)
    {
        <div class="alert alert-success">@TempData["Message"]</div>
    }
    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger">@TempData["Error"]</div>
    }

    }


<div class="container py-4">
    <div class="row justify-content-center">
        <div class="col-12 col-lg-10">
            <div class="card bg-dark text-white shadow mb-4">
                <div class="card-body p-4">
                    <div class="row">
                        <div class="col-md-4 mb-4 mb-md-0">
                            <div class="mb-4">
                                <p><strong>Full Name:</strong> @Model.Name</p>
                                <p><strong>Email Address:</strong> @Model.Email</p>
                            </div>
                            <div class="d-flex flex-column gap-2">
                                <button class="btn custom-btn text-white" id="updateProfileBtn">Update Profile</button>
                                <button class="btn custom-btn text-white" id="changePasswordBtn">Change
                                    Password</button>
                            </div>
                        </div>
                        <div class="col-md-8">
                            <div class="d-none" id="updateProfileForm">
                                <h3 class="h5 mb-3">Update Profile</h3>
                                        <form method="post" asp-action="UpdateProfile">
                                            <div class="mb-3">
                                        <label for="name" class="form-label">Full Name</label>
                                        <input type="text" id="name" name="FullName" value="@Model.Name" class="form-control ..." required>
                                    </div>
                                    <div class="mb-3">
                                        <label for="email" class="form-label">Email Address</label>
                                        <input type="email" id="email" name="Email" value="@Model.Email" class="form-control ..." required>

                                    </div>
                                    <div class="row">
                                        <div class="col-md-6 mb-2 mb-md-0">
                                            <button type="submit" class="btn custom-btn text-white w-100">Update
                                                Profile</button>
                                        </div>
                                        <div class="col-md-6">
                                            <button type="button" class="btn cancel-btn text-white w-100"
                                            id="closeUpdateProfileBtn">Close</button>
                                        </div>
                                    </div>
                                </form>
                            </div>
                            <hr class="d-none" id="updateProfileDivider">
                            <div class="d-none" id="changePasswordForm">
                                <h3 class="h5 mb-3">Change Password</h3>
                                <form method="post" asp-action="ChangePassword">
                                    <div class="mb-3">
                                        <label for="currentPassword" class="form-label">Current Password</label>
                                        <input type="password" id="currentPassword" name="CurrentPassword"
                                        class="form-control bg-dark text-white border-secondary" required>
                                    </div>
                                    <div class="mb-3">
                                        <label for="newPassword" class="form-label">New Password</label>
                                        <input type="password" id="newPassword" name="NewPassword"
                                        class="form-control bg-dark text-white border-secondary" required>
                                    </div>
                                    <div class="mb-3">
                                        <label for="confirmPassword" class="form-label">Confirm New Password</label>
                                        <input type="password" id="confirmPassword" name="ConfirmPassword"
                                        class="form-control bg-dark text-white border-secondary" required>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-6 mb-2 mb-md-0">
                                            <button type="submit" class="btn custom-btn text-white w-100">Change
                                                Password</button>
                                        </div>
                                        <div class="col-md-6">
                                            <button type="button" class="btn cancel-btn text-white w-100"
                                            id="closeChangePasswordBtn">Close</button>
                                        </div>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            @if (userRole == "Customer")
            {
                <div class="card bg-dark text-white shadow mb-4">
                    <div class="card-body p-4">
                        <h3 class="h5 mb-3">All My Requests</h3>
                        <div class="mb-3 d-flex gap-2">
                            <input type="text" id="searchRequests" class="form-control bg-dark text-white border-secondary"
                            placeholder="Search requests...">
                            <select id="filterRequests" class="form-select bg-dark text-white border-secondary">
                                <option value="all">All</option>
                                <option value="pending">Pending</option>
                                <option value="approved">Approved</option>
                                <option value="rejected">Rejected</option>
                                <option value="returned">Returned</option>
                            </select>
                        </div>
                        <div id="requestsList">
                            <div class="text-center text-muted">Loading your requests...</div>
                        </div>

                    </div>
                </div>



                <div class="card bg-dark text-white shadow mb-4">
                    <div class="card-body p-4">
                    <h3 class="h5 mb-3">All My Transactions</h3>
                   <div class="mb-3 d-flex gap-2">
    <input type="text" id="searchTransactions"
        class="form-control bg-dark text-white border-secondary"
        placeholder="Search transactions...">
    <select id="filterTransactions" class="form-select bg-dark text-white border-secondary">
        <option value="all">All</option>
        <option value="paid">Paid</option>
        <option value="pending">Pending</option>
        <option value="failed">Failed</option>
         <option value="cancelled">Cancelled</option>
    </select>
    <button type="button" id="resetTransactionFilter" class="btn button-primary"
        style="background-color: #1f2a55; color: white;">
        <i class="bi bi-arrow-counterclockwise"></i> Reset
    </button>
</div>

                   <div id="transactionsList">
    <div class="text-center text-muted">Loading your transactions...</div>
</div>


                </div>
            </div>
            }
            @if (userRole == "Admin" || userRole == "Manager")
            {
                <div class="card bg-dark text-white shadow mb-4">
                    <div class="card-body p-4">
                    <h3 class="h5 mb-3">Rented Now</h3>
                    <div class="mb-3 d-flex gap-2">
                        <input type="text" id="searchRentedNow" class="form-control bg-dark text-white border-secondary"
                               placeholder="Search approved rentals...">
                    </div>
                    <div id="rentedNowList">
                        <div class="text-center text-muted">Loading your rented items...</div>
                    </div>
                </div>
            </div>
            }
             @if (userRole == "Customer")
            {
                <div class="card bg-dark text-white shadow mb-4">
                    <div class="card-body p-4">
                    <h3 class="h5 mb-3">Return History</h3>
                    <div class="mb-3 d-flex gap-2">
                        <input type="text" id="searchReturnHistory" class="form-control bg-dark text-white border-secondary"
                               placeholder="Search returned items...">
                        <select id="filterReturnHistory" class="form-select bg-dark text-white border-secondary">
                            <option value="all">All</option>
                            <option value="on-time">Returned On Time</option>
                            <option value="late">Returned Late</option>
                        </select>
                        <button type="button" id="resetReturnHistoryFilter" class="btn button-primary"
                                style="background-color: #1f2a55; color: white;">
                            <i class="bi bi-arrow-counterclockwise"></i> Reset
                        </button>
                    </div>
                    <div id="returnHistoryList">
                        <div class="text-center text-muted">Loading return history items...</div>
                    </div>
                </div>
            </div>
            }
            @* this part is for the admin only , we are gonna handle it later *@
            @if (userRole == "Manager")
            {
                <div class="card bg-dark text-white shadow mb-4">
                    <div class="card-body p-4">
                        <h3>Manager</h3>
<div class="d-grid gap-2 d-md-flex mt-3">
    <button class="btn custom-btn text-white flex-fill" onclick="window.location.href='@Url.Action("Manage", "Equipment")'">
        Manage Equipments
    </button>

    <button class="btn custom-btn text-white flex-fill" onclick="window.location.href='@Url.Action("ManageRentalRequests", "Rental")'">
        Manage Rental Requests
    </button>

    <button class="btn custom-btn text-white flex-fill" onclick="window.location.href='/RentalTransaction/ManageTransactions'">
        Manage Transactions
    </button>

    <button class="btn custom-btn text-white flex-fill" onclick="window.location.href='/Comment/Manage'">
        Manage Comments
    </button>
</div>



                    </div>
                </div>
            }

           @if (userRole == "Admin")
{
    <div class="card bg-dark text-white shadow mb-4">
        <div class="card-body p-4">
            <h3>Administrator</h3>
            <div class="d-flex gap-2 mt-3">
                <button class="btn custom-btn text-white"
                        onclick="window.location.href='@Url.Action("ManageCat", "Category")'">
                    Manage Categories
                </button>

                <button class="btn custom-btn text-white"
                        onclick="window.location.href='@Url.Action("Manage", "Equipment")'">
                    Manage Equipments
                </button>

                            <button class="btn custom-btn text-white flex-fill" onclick="window.location.href='@Url.Action("ManageRentalRequests", "Rental")'">
                                Manage Rental Requests
                            </button>

                <button class="btn custom-btn text-white"
                        onclick="window.location.href='@Url.Action("ManageTransactions", "RentalTransaction")'">
                    Manage Transactions
                </button>

                <button class="btn custom-btn text-white"
                        onclick="window.location.href='@Url.Action("ManageComments", "Feedback")'">
                    Manage Comments
                </button>

                <a class="btn custom-btn text-white"
                   asp-controller="AdminLogs"
                   asp-action="Index">
                    System Logs
                </a>

               
            </div>
        </div>
    </div>
}

        </div>
</div>


@section Scripts {
    <script>
        document.getElementById('updateProfileBtn').addEventListener('click', function () {
            document.getElementById('updateProfileForm').classList.remove('d-none');
            document.getElementById('updateProfileDivider').classList.remove('d-none');
            document.getElementById('changePasswordForm').classList.add('d-none');
        });

        document.getElementById('changePasswordBtn').addEventListener('click', function () {
            document.getElementById('changePasswordForm').classList.remove('d-none');
            document.getElementById('updateProfileForm').classList.add('d-none');
            document.getElementById('updateProfileDivider').classList.add('d-none');
        });

        document.getElementById('closeUpdateProfileBtn').addEventListener('click', function () {
            document.getElementById('updateProfileForm').classList.add('d-none');
            document.getElementById('updateProfileDivider').classList.add('d-none');
        });

        document.getElementById('closeChangePasswordBtn').addEventListener('click', function () {
            document.getElementById('changePasswordForm').classList.add('d-none');
        });
    </script>
        <script>
            window.addEventListener('DOMContentLoaded', function () {
                fetch('@Url.Action("MyRequests", "Rental")')
                    .then(response => response.text())
                    .then(html => {
                        document.getElementById('requestsList').innerHTML = html;
                    })
                    .catch(error => {
                        console.error("Failed to load requests:", error);
                        document.getElementById('requestsList').innerHTML =
                            '<div class="text-danger">Unable to load your requests at this time.</div>';
                    });
            });
        </script>
        <script>
    const searchInput = document.getElementById('searchTransactions');
    const statusSelect = document.getElementById('filterTransactions');
    const resetBtn = document.getElementById('resetTransactionFilter');
    const transactionsList = document.getElementById('transactionsList');

    function loadMyTransactions() {
        const search = searchInput.value;
        const status = statusSelect.value;

        fetch(`/RentalTransaction/FilterMyTransactions?searchTerm=${encodeURIComponent(search)}&filterStatus=${encodeURIComponent(status)}`)
            .then(res => res.text())
            .then(html => {
                transactionsList.innerHTML = html;
            })
            .catch(() => {
                transactionsList.innerHTML = '<div class="text-danger">Unable to load your transactions at this time.</div>';
            });
    }

    searchInput.addEventListener('input', loadMyTransactions);
    statusSelect.addEventListener('change', loadMyTransactions);
    resetBtn.addEventListener('click', () => {
        searchInput.value = '';
        statusSelect.value = 'all';
        loadMyTransactions();
    });

    window.addEventListener('DOMContentLoaded', loadMyTransactions);
</script>

        <script>
            function loadRequests() {
                const search = document.getElementById("searchRequests").value;
                const filter = document.getElementById("filterRequests").value;

                fetch(`/Rental/MyRequests?search=${encodeURIComponent(search)}&filter=${encodeURIComponent(filter)}`)
                    .then(res => res.text())
                    .then(html => {
                        document.getElementById("requestsList").innerHTML = html;
                    });
            }

            document.getElementById("searchRequests").addEventListener("input", loadRequests);
            document.getElementById("filterRequests").addEventListener("change", loadRequests);

            // Load initially
            window.addEventListener("DOMContentLoaded", loadRequests);
        </script>
        <script>
            // Load rented items
            function loadRentedNow() {
                const search = document.getElementById('searchRentedNow').value;

                fetch(`/Rental/RentedNowPartial?search=${encodeURIComponent(search)}`)
                    .then(response => response.text())
                    .then(html => {
                        document.getElementById('rentedNowList').innerHTML = html;
                    })
                    .catch(error => {
                        console.error("Failed to load rented items:", error);
                        document.getElementById('rentedNowList').innerHTML =
                            '<div class="text-danger">Unable to load your rented items at this time.</div>';
                    });
            }

            // Event listener for search input
            document.getElementById('searchRentedNow').addEventListener('input', loadRentedNow);

            // Load initially
            window.addEventListener('DOMContentLoaded', loadRentedNow);
        </script>
        <script>
            // Load return history with search and filter
            function loadReturnHistory() {
                const search = document.getElementById('searchReturnHistory').value;
                const filter = document.getElementById('filterReturnHistory').value;

                fetch(`/Rental/GetReturnHistory?search=${encodeURIComponent(search)}&filter=${encodeURIComponent(filter)}`)
                    .then(response => response.text())
                    .then(html => {
                        document.getElementById('returnHistoryList').innerHTML = html;
                    })
                    .catch(error => {
                        console.error("Failed to load return history:", error);
                        document.getElementById('returnHistoryList').innerHTML =
                            '<div class="text-danger">Unable to load return history at this time.</div>';
                    });
            }

            // Event listeners
            document.getElementById('searchReturnHistory').addEventListener('input', loadReturnHistory);
            document.getElementById('filterReturnHistory').addEventListener('change', loadReturnHistory);
            document.getElementById('resetReturnHistoryFilter').addEventListener('click', () => {
                document.getElementById('searchReturnHistory').value = '';
                document.getElementById('filterReturnHistory').value = 'all';
                loadReturnHistory();
            });

            // Load initially
            window.addEventListener('DOMContentLoaded', loadReturnHistory);

        </script>
}
